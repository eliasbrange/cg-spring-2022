name: "Terraform Plan"

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      work_dir:
        required: true
        type: string
    secrets:
      role:
        required: true

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.work_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.role }}
          role-session-name: TerraformPlanSession

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: ""
          terraform_version: 1.1.7

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Format output
        id: output
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        run: |
          PLAN=$(echo "$PLAN" | sed -r 's/^([[:blank:]]*)([-+~])/\2\1/g')
          PLAN=$(echo "$PLAN" | sed -r 's/^~/!/g')
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: marocchino/sticky-pull-request-comment@39c5b5dc7717447d0cba270cd115037d32d28443
        with:
          header: ${{ inputs.project_name }}
          message: |
            ## Project: ${{ inputs.project_name }}

            #### Terraform Format and Style üñå`${{ steps.fmt.outcome }}`
            #### Terraform Initialization ‚öôÔ∏è`${{ steps.init.outcome }}`
            #### Terraform Validation ü§ñ`${{ steps.validate.outcome }}`

            <details><summary>Validation Output</summary>
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
            </details>

            #### Terraform Plan üìñ`${{ steps.plan.outcome }}`

            <details><summary>Show Plan</summary>

            ```diff
            ${{ env.PLAN }}
            ```

            </details>

            *Pusher: @${{ github.actor }}, Action: `${{ github.event_name }}, Working Directory: \`${{ inputs.work_dir }}\`, Workflow: \`${{ github.workflow }}\`*

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

